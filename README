Splunk

This Splunk module supports deploying complex Splunk environments (forwarder, indexer, and search head roles, clustering, etc). It is does not create the user or group, leaving that up to your implementation. It does require the user and group to exist prior to the application being installed, so chaining your resources is a good idea. It supports running as root or a dedicated account. By default it assumes running as user/group splunk/splunk and will apply ACLs to grant access to log files specified in the hiera hash splunk::inputs. If the node has a splunk role of indexer it will create indexes based on the hiera hash splunk::indexes.

If you choose to use a fileserver definition for your splunk tarbals, e.g.:

  [splunk]
    path /etc/puppetlabs/puppet/files/splunk
    allow *

the file server should be populated with the tarballs for the splunk components you want to manage and splunk::params::source should be set to 'fileserver'.

The module depends on some basic hiera to supply global setttings and install a forwarder or stand-alone Splunk server.

  splunk::params::deployment_server: string
  splunk::params::email: string
  splunk::params::license_master: string
  splunk::params::search_deploy: string
  splunk::params::serviceurl: string
  splunk::params::source: 'splunk'
  splunk::params::symmkey: string
  splunk::params::version: '6.6.3'
  splunk::params::release: 'e21ee54bc796'
  splunk::params::tcpout: hash
    group:string
    cname: string
    servers:array

Sample node/role hiera data:

  splunk::inputs:
    'messages':
      target: '/var/log/messages'
      index: 'main'
      sourcetype: 'linux_messages_syslog'
    'secure':
      target: '/var/log/secure'
      index: 'main'
      sourcetype: 'linux_secure'
    'maillog':
      target: '/var/log/maillog'
      index: 'main'
      sourcetype: 'syslog'
    'spooler':
      target: '/var/log/spooler'
      index: 'main'
      sourcetype: 'syslog'
    'cron':
      target: '/var/log/cron'
      index: 'main'
      sourcetype: 'syslog'

A sample manifest snippet:

  $my_type = hiera('splunk::type', 'forwarder')

  if $my_type != 'none' {
    class { '::splunk': type => $my_type }

    # create OS, role, and host specific inputs
    $my_inputs = hiera_hash('splunk::inputs')
    create_resources('splunk::input', $my_inputs)

    # set up any ACLs definied  at the OS, role or host for splunk group
    # log access
    $my_acls = hiera_hash('splunk::acls')
    create_resources('splunk::acl', $my_acls)
  }

License
-------

Apache 2.0

Contact
-------

If you need help implementing, contact me [ caldwell @ gwu dot edu ]

Support
-------

Please log tickets and issues at our [Projects site](https://github.com/cudgel/splunk)
